{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/index.ts","webpack:///./src/app/ov-video.component.ts","webpack:///./src/app/user-video.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/polyfills.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".stream-container {\\r\\n\\tpadding: 0;\\r\\n}\"","module.exports = \"<div id=\\\"main-container\\\" class=\\\"container\\\">\\r\\n\\t<div *ngIf=\\\"!session\\\" id=\\\"join\\\">\\r\\n\\t\\t<div id=\\\"img-div\\\"><img src=\\\"assets/images/openvidu_grey_bg_transp_cropped.png\\\" /></div>\\r\\n\\t\\t<div id=\\\"join-dialog\\\" class=\\\"jumbotron vertical-center\\\">\\r\\n\\t\\t\\t<h1>Join a video session</h1>\\r\\n\\t\\t\\t<form class=\\\"form-group\\\" (submit)=\\\"joinSession()\\\">\\r\\n\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t<label>Participant</label>\\r\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"userName\\\" name=\\\"userName\\\" [(ngModel)]=\\\"myUserName\\\" required>\\r\\n\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t<label>Session</label>\\r\\n\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"sessionId\\\" name=\\\"sessionId\\\" [(ngModel)]=\\\"mySessionId\\\" required>\\r\\n\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t<p class=\\\"text-center\\\">\\r\\n\\t\\t\\t\\t\\t<input class=\\\"btn btn-lg btn-success\\\" type=\\\"submit\\\" name=\\\"commit\\\" value=\\\"Join!\\\">\\r\\n\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div *ngIf=\\\"session\\\" id=\\\"session\\\">\\r\\n\\t\\t<div id=\\\"session-header\\\">\\r\\n\\t\\t\\t<h1 id=\\\"session-title\\\">{{mySessionId}}</h1>\\r\\n\\t\\t\\t<input class=\\\"btn btn-large btn-danger\\\" type=\\\"button\\\" id=\\\"buttonLeaveSession\\\" (click)=\\\"leaveSession()\\\" value=\\\"Leave session\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"mainStreamManager\\\" id=\\\"main-video\\\" class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t<user-video [streamManager]=\\\"mainStreamManager\\\"></user-video>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div id=\\\"video-container\\\" class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t<div *ngIf=\\\"publisher\\\" class=\\\"stream-container col-md-6 col-xs-6\\\">\\r\\n\\t\\t\\t\\t<user-video [streamManager]=\\\"publisher\\\" (clicked)=\\\"updateMainStreamManager(publisher)\\\"></user-video>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngFor=\\\"let sub of subscribers\\\" class=\\\"stream-container col-md-6 col-xs-6\\\">\\r\\n\\t\\t\\t\\t<user-video [streamManager]=\\\"sub\\\" (clicked)=\\\"updateMainStreamManager(sub)\\\"></user-video>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, HostListener, Input, OnDestroy } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { throwError as observableThrowError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { OpenVidu, Session, StreamManager, Publisher, Subscriber, StreamEvent } from 'openvidu-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnDestroy {\r\n\r\n  OPENVIDU_SERVER_URL = 'https://' + location.hostname + ':4443';\r\n  OPENVIDU_SERVER_SECRET = 'MY_SECRET';\r\n\r\n  // OpenVidu objects\r\n  OV: OpenVidu;\r\n  session: Session;\r\n  publisher: StreamManager; // Local\r\n  subscribers: StreamManager[] = []; // Remotes\r\n\r\n  // Join form\r\n  mySessionId: string;\r\n  myUserName: string;\r\n\r\n  // Main video of the page, will be 'publisher' or one of the 'subscribers',\r\n  // updated by an Output event of UserVideoComponent children\r\n  @Input() mainStreamManager: StreamManager;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n    this.generateParticipantInfo();\r\n  }\r\n\r\n  @HostListener('window:beforeunload')\r\n  beforeunloadHandler() {\r\n    // On window closed leave session\r\n    this.leaveSession();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // On component destroyed leave session\r\n    this.leaveSession();\r\n  }\r\n\r\n  joinSession() {\r\n\r\n    // --- 1) Get an OpenVidu object ---\r\n\r\n    this.OV = new OpenVidu();\r\n\r\n    // --- 2) Init a session ---\r\n\r\n    this.session = this.OV.initSession();\r\n\r\n    // --- 3) Specify the actions when events take place in the session ---\r\n\r\n    // On every new Stream received...\r\n    this.session.on('streamCreated', (event: StreamEvent) => {\r\n\r\n      // Subscribe to the Stream to receive it. Second parameter is undefined\r\n      // so OpenVidu doesn't create an HTML video by its own\r\n      let subscriber: Subscriber = this.session.subscribe(event.stream, undefined);\r\n      this.subscribers.push(subscriber);\r\n    });\r\n\r\n    // On every Stream destroyed...\r\n    this.session.on('streamDestroyed', (event: StreamEvent) => {\r\n\r\n      // Remove the stream from 'subscribers' array\r\n      this.deleteSubscriber(event.stream.streamManager);\r\n    });\r\n\r\n    // --- 4) Connect to the session with a valid user token ---\r\n\r\n    // 'getToken' method is simulating what your server-side should do.\r\n    // 'token' parameter should be retrieved and returned by your own backend\r\n    this.getToken().then(token => {\r\n\r\n      // First param is the token got from OpenVidu Server. Second param can be retrieved by every user on event\r\n      // 'streamCreated' (property Stream.connection.data), and will be appended to DOM as the user's nickname\r\n      this.session.connect(token, { clientData: this.myUserName })\r\n        .then(() => {\r\n\r\n          // --- 5) Get your own camera stream ---\r\n\r\n          // Init a publisher passing undefined as targetElement (we don't want OpenVidu to insert a video\r\n          // element: we will manage it on our own) and with the desired properties\r\n          let publisher: Publisher = this.OV.initPublisher(undefined, {\r\n            audioSource: undefined, // The source of audio. If undefined default microphone\r\n            videoSource: undefined, // The source of video. If undefined default webcam\r\n            publishAudio: true,     // Whether you want to start publishing with your audio unmuted or not\r\n            publishVideo: true,     // Whether you want to start publishing with your video enabled or not\r\n            resolution: '640x480',  // The resolution of your video\r\n            frameRate: 30,          // The frame rate of your video\r\n            insertMode: 'APPEND',   // How the video is inserted in the target element 'video-container'\r\n            mirror: false           // Whether to mirror your local video or not\r\n          });\r\n\r\n          // --- 6) Publish your stream ---\r\n\r\n          this.session.publish(publisher);\r\n\r\n          // Set the main video in the page to display our webcam and store our Publisher\r\n          this.mainStreamManager = publisher;\r\n          this.publisher = publisher;\r\n        })\r\n        .catch(error => {\r\n          console.log('There was an error connecting to the session:', error.code, error.message);\r\n        });\r\n    });\r\n  }\r\n\r\n  leaveSession() {\r\n\r\n    // --- 7) Leave the session by calling 'disconnect' method over the Session object ---\r\n\r\n    if (this.session) { this.session.disconnect(); };\r\n\r\n    // Empty all properties...\r\n    this.subscribers = [];\r\n    delete this.publisher;\r\n    delete this.session;\r\n    delete this.OV;\r\n    this.generateParticipantInfo();\r\n  }\r\n\r\n\r\n  private generateParticipantInfo() {\r\n    // Random user nickname and sessionId\r\n    this.mySessionId = 'SessionA';\r\n    this.myUserName = 'Participant' + Math.floor(Math.random() * 100);\r\n  }\r\n\r\n  private deleteSubscriber(streamManager: StreamManager): void {\r\n    let index = this.subscribers.indexOf(streamManager, 0);\r\n    if (index > -1) {\r\n      this.subscribers.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private updateMainStreamManager(streamManager: StreamManager) {\r\n    this.mainStreamManager = streamManager;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * --------------------------\r\n   * SERVER-SIDE RESPONSIBILITY\r\n   * --------------------------\r\n   * This method retrieve the mandatory user token from OpenVidu Server,\r\n   * in this case making use Angular http API.\r\n   * This behaviour MUST BE IN YOUR SERVER-SIDE IN PRODUCTION. In this case:\r\n   *   1) Initialize a session in OpenVidu Server\t (POST /api/sessions)\r\n   *   2) Generate a token in OpenVidu Server\t\t   (POST /api/tokens)\r\n   *   3) The token must be consumed in Session.connect() method of OpenVidu Browser\r\n   */\r\n\r\n  getToken(): Promise<string> {\r\n    return this.createSession(this.mySessionId).then(\r\n      sessionId => {\r\n        return this.createToken(sessionId);\r\n      })\r\n  }\r\n\r\n  createSession(sessionId) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const body = JSON.stringify({ customSessionId: sessionId });\r\n      const options = {\r\n        headers: new HttpHeaders({\r\n          'Authorization': 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\r\n          'Content-Type': 'application/json'\r\n        })\r\n      };\r\n      return this.httpClient.post(this.OPENVIDU_SERVER_URL + '/api/sessions', body, options)\r\n        .pipe(\r\n          catchError(error => {\r\n            if (error.status === 409) {\r\n              resolve(sessionId);\r\n            } else {\r\n              console.warn('No connection to OpenVidu Server. This may be a certificate error at ' + this.OPENVIDU_SERVER_URL);\r\n              if (window.confirm('No connection to OpenVidu Server. This may be a certificate error at \\\"' + this.OPENVIDU_SERVER_URL +\r\n                '\\\"\\n\\nClick OK to navigate and accept it. If no certificate warning is shown, then check that your OpenVidu Server' +\r\n                'is up and running at \"' + this.OPENVIDU_SERVER_URL + '\"')) {\r\n                location.assign(this.OPENVIDU_SERVER_URL + '/accept-certificate');\r\n              }\r\n            }\r\n            return observableThrowError(error);\r\n          })\r\n        )\r\n        .subscribe(response => {\r\n          console.log(response);\r\n          resolve(response['id']);\r\n        });\r\n    });\r\n  }\r\n\r\n  createToken(sessionId): Promise<string> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const body = JSON.stringify({ session: sessionId });\r\n      const options = {\r\n        headers: new HttpHeaders({\r\n          'Authorization': 'Basic ' + btoa('OPENVIDUAPP:' + this.OPENVIDU_SERVER_SECRET),\r\n          'Content-Type': 'application/json'\r\n        })\r\n      };\r\n      return this.httpClient.post(this.OPENVIDU_SERVER_URL + '/api/tokens', body, options)\r\n        .pipe(\r\n          catchError(error => {\r\n            reject(error);\r\n            return observableThrowError(error);\r\n          })\r\n        )\r\n        .subscribe(response => {\r\n          console.log(response);\r\n          resolve(response['token']);\r\n        });\r\n    });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UserVideoComponent } from './user-video.component';\r\nimport { OpenViduVideoComponent } from './ov-video.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserVideoComponent,\r\n    OpenViduVideoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export * from './app.component';\r\nexport * from './app.module';\r\n","import { Component, Input, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { StreamManager } from 'openvidu-browser';\r\n\r\n@Component({\r\n    selector: 'ov-video',\r\n    template: '<video #videoElement></video>'\r\n})\r\nexport class OpenViduVideoComponent implements AfterViewInit {\r\n\r\n    @ViewChild('videoElement') elementRef: ElementRef;\r\n\r\n    _streamManager: StreamManager;\r\n\r\n    ngAfterViewInit() {\r\n        this._streamManager.addVideoElement(this.elementRef.nativeElement);\r\n    }\r\n\r\n    @Input()\r\n    set streamManager(streamManager: StreamManager) {\r\n        this._streamManager = streamManager;\r\n        if (!!this.elementRef) {\r\n            this._streamManager.addVideoElement(this.elementRef.nativeElement);\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { StreamManager } from 'openvidu-browser';\r\n\r\n@Component({\r\n    selector: 'user-video',\r\n    styles: [`\r\n        ov-video {\r\n            width: 100%;\r\n            height: auto;\r\n            float: left;\r\n            cursor: pointer;\r\n        }\r\n        div div {\r\n            position: absolute;\r\n            background: #f8f8f8;\r\n            padding-left: 5px;\r\n            padding-right: 5px;\r\n            color: #777777;\r\n            font-weight: bold;\r\n            border-bottom-right-radius: 4px;\r\n        }\r\n        p {\r\n            margin: 0;\r\n        }`],\r\n    template: `\r\n        <div (click)=\"videoClicked()\">\r\n            <ov-video [streamManager]=\"streamManager\"></ov-video>\r\n            <div><p>{{getNicknameTag()}}</p></div>\r\n        </div>`\r\n})\r\nexport class UserVideoComponent {\r\n\r\n    @Input()\r\n    streamManager: StreamManager;\r\n\r\n    @Output()\r\n    clicked = new EventEmitter();\r\n\r\n    getNicknameTag() { // Gets the nickName of the user\r\n        return JSON.parse(this.streamManager.stream.connection.data).clientData;\r\n    }\r\n\r\n    videoClicked() { // Triggers event for the parent component to update its main video display (other UserVideoComponent)\r\n        this.clicked.emit();\r\n    }\r\n\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","// This file includes polyfills needed by Angular 6 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\r\n(window as any).global = window;\r\n"],"sourceRoot":""}